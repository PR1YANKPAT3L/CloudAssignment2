/*
 * @author Priyank Patel
 * @github https://github.com/PR1YANKPAT3L
 * @desc Contains All Main App Angular Module
 */
(function () {
	define(['angular', 'angularAnimate', 'angularMaterial', 'angularRouter', 'angular-cache', 'facebook', 'AuthService'], function (angular, angularAnimate, angularMaterial, angularRouter, angularCache, facebook, AuthService) {
		'use strict';

    // Create CLAPP Module as the main app module
		var app = angular.module('clapp', ['ngAnimate', 'ngMaterial', 'ui.router', 'angular-cache', 'FacebookService']);

		app.config(function ($stateProvider, $urlRouterProvider, CacheFactoryProvider) {
			// Set Max Age for Caching
			angular.extend(CacheFactoryProvider.defaults, {
				maxAge: 15 * 60 * 1000
			});
			//$urlRouterProvider.otherwise('/login');

      // Setup State Providers
			$stateProvider
			.state('login', {
				url: '/login',
				templateUrl: 'partials/login/login.html'
			})
			.state('register', {
				url: '/register',
				templateUrl: 'partials/login/register.html'
			})
			.state('dashboard', {
				url: '/dashboard',
				templateUrl: 'partials/dashboard/base.html'
			})
			.state('dashboard.home', {
				url: '/home',
				templateUrl: 'partials/dashboard/home/home.html'
			});
		});

    app.run(['$rootScope', '$window', 'FacebookService', function($rootScope, $window, FacebookService) {
      $rootScope.user = {}

      FB.init({
        appId      : '955177784536960',
        version    : 'v2.5',
        xfbml      : true,
				cookie		 : true,
				status		 : true
      });

			FacebookService.watchLoginChange();
			FacebookService.getLoginStatus();
    }]);

		app.controller('LoginController', ['$scope', '$http', '$timeout', function($scope, $http, $timeout) {
			$scope.isValidationInProgress = false;

			$scope.loginWithFB = function () {
				FB.login();
			}

			$scope.login = function () {
				$scope.isValidationInProgress = true;
				$scope.loginError = false;

				var payload = {
					email: $scope.login.email,
					pass: $scope.login.password
				};

				$http({
					url: '/api/v1/login.php',
					method: 'POST',
					data: payload,
					headers: {
						'Content-Type': 'application/json; charset=utf-8'
					}
				}).success(function (response) {
					if(response.valid) {
						$timeout(function () {
							$scope.isValidationInProgress = false;
							$scope.loginError = false;
							$scope.loginErrorMessage = response.message;
						}, 1000);
					} else {
						$timeout(function () {
							$scope.isValidationInProgress = false;
							$scope.loginError = true;
							$scope.loginErrorMessage = response.message;
						}, 1000);
					}
				}).error(function (error) {
					console.log(error);
				});
			}
		}]);

		app.controller('RegisterController', ['$scope', '$http', '$timeout', function($scope, $http, $timeout) {
			$scope.isValidationInProgress = false;

			$scope.register = function () {
				$scope.isValidationInProgress = true;
				$scope.registerError = false;

				var payload = {
					email: $scope.register.email,
					pass: $scope.register.password,
					repeat: $scope.register.repeatpassword
				};
				console.log(payload);
				if(payload.pass === payload.repeat) {
					$http({
						url: '/api/v1/register.php',
						method: 'POST',
						data: payload,
						headers: {
							'Content-Type': 'application/json; charset=utf-8'
						}
					}).success(function (response) {
						console.log(response)
						if(response.valid) {
							$timeout(function () {
								$scope.isValidationInProgress = false;
								$scope.registerError = false;
								$scope.registerErrorMessage = response.message;
							}, 1000);
						} else {
							$timeout(function () {
								$scope.isValidationInProgress = false;
								$scope.registerError = true;
								$scope.registerErrorMessage = response.message;
							}, 1000);
						}
					}).error(function (error) {
						console.log(error);
					});
				} else {
					$timeout(function () {
						$scope.isValidationInProgress = false;
						$scope.registerError = true;
						$scope.registerErrorMessage = "Password must match!";
					}, 1000);
				}
			}
		}]);

		return app;
	});
}).call(this);
