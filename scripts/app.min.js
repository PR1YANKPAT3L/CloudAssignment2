/*
 * @author Priyank Patel
 * @github https://github.com/PR1YANKPAT3L
 * @desc Contains All Main App Angular Module
 */
(function () {
	define(['angular', 'angularAnimate', 'angularMaterial', 'angularRouter', 'angular-cache', 'facebook', 'AuthService', 'angularCookies'], function (angular, angularAnimate, angularMaterial, angularRouter, angularCache, facebook, AuthService, angularCookies) {
		'use strict';

    // Create CLAPP Module as the main app module
		var app = angular.module('clapp', ['ngAnimate', 'ngMaterial', 'ui.router', 'angular-cache', 'FacebookService', 'ngCookies']);

		app.config(function ($stateProvider, $urlRouterProvider, CacheFactoryProvider) {
			// Set Max Age for Caching
			angular.extend(CacheFactoryProvider.defaults, {
				maxAge: 15 * 60 * 1000
			});
			$urlRouterProvider.otherwise('/login');

      // Setup State Providers
			$stateProvider
			.state('login', {
				url: '/login',
				templateUrl: 'partials/login/login.html'
			})
			.state('register', {
				url: '/register',
				templateUrl: 'partials/login/register.html'
			})
			.state('dashboard', {
				url: '/dashboard',
				templateUrl: 'partials/dashboard/base.html'
			})
			.state('imgur', {
				url: '/imgur',
				templateUrl: 'partials/dashboard/imgur.html'
			})
			.state('logout', {
				url: '/logout',
				controller: "LogoutController"
			});
		});

    app.run(['$rootScope', '$window', 'FacebookService', '$cookies', '$state', function($rootScope, $window, FacebookService, $cookies, $state) {
      $rootScope.user = {}

      FB.init({
        appId      : '955177784536960',
        version    : 'v2.5',
        xfbml      : true,
				cookie		 : true,
				status		 : true
      });

			FacebookService.watchLoginChange();
			FacebookService.getLoginStatus();

			/*$rootScope.$on('$stateChangeStart',
				function(event, toState, toParams, fromState, fromParams, options){
				    if(toState.name === 'dashboard') {
							if($cookies.get('isLoggedIn') !== undefined && $cookies.get('isLoggedIn'))
								$state.go(toState.name);
							else
								$state.go('login');
						}
				})*/
    }]);

		app.controller('LoginController', ['$scope', '$http', '$timeout', '$cookies', '$state', function($scope, $http, $timeout, $cookies, $state) {
			$scope.isValidationInProgress = false;

			$scope.loginWithFB = function () {
				FB.login();
			}

			$scope.login = function () {
				$scope.isValidationInProgress = true;
				$scope.loginError = false;

				var payload = {
					email: $scope.login.email,
					pass: $scope.login.password
				};

				$http({
					url: '/api/v1/login.php',
					method: 'POST',
					data: payload,
					headers: {
						'Content-Type': 'application/json; charset=utf-8'
					}
				}).success(function (response) {
					if(response.valid) {
						$timeout(function () {
							$scope.isValidationInProgress = false;
							$scope.loginError = false;
							$scope.loginErrorMessage = response.message;
							$cookies.put('isLoggedIn', true);
							$cookies.put('email', payload.email);
							$state.go('dashboard');
						}, 1000);
					} else {
						$timeout(function () {
							$scope.isValidationInProgress = false;
							$scope.loginError = true;
							$scope.loginErrorMessage = response.message;
						}, 1000);
					}
				}).error(function (error) {
					console.log(error);
				});
			}
		}]);

		app.controller('RegisterController', ['$scope', '$http', '$timeout', '$cookies', function($scope, $http, $timeout, $cookies) {
			$scope.isValidationInProgress = false;

			$scope.register = function () {
				$scope.isValidationInProgress = true;
				$scope.registerError = false;

				var payload = {
					name: $scope.register.fullname,
					email: $scope.register.email,
					pass: $scope.register.password,
					repeat: $scope.register.repeatpassword
				};

				if(payload.pass === payload.repeat) {
					$http({
						url: '/api/v1/register.php',
						method: 'POST',
						data: payload,
						headers: {
							'Content-Type': 'application/json; charset=utf-8'
						}
					}).success(function (response) {
						if(response.valid) {
							$timeout(function () {
								$scope.isValidationInProgress = false;
								$scope.registerError = false;
								$scope.registerErrorMessage = response.message;
							}, 1000);
						} else {
							$timeout(function () {
								$scope.isValidationInProgress = false;
								$scope.registerError = true;
								$scope.registerErrorMessage = response.message;
							}, 1000);
						}
					}).error(function (error) {
						console.log(error);
					});
				} else {
					$timeout(function () {
						$scope.isValidationInProgress = false;
						$scope.registerError = true;
						$scope.registerErrorMessage = "Password must match!";
					}, 1000);
				}
			}
		}]);

		app.controller('DashboardController', ['$scope', '$http', '$timeout', '$cookies', '$state', 'FacebookService', function($scope, $http, $timeout, $cookies, $state, FacebookService) {
			if(!$cookies.get('isLoggedIn')) {
				$state.go('login');
			} else {
				FB.getLoginStatus(function(response) {
					if(response.status === "connected")
						var info = FacebookService.getUserInfo();
						$scope.email = info.name;
					else
						$scope.email = $cookies.get('email');
				});
			}
		}]);

		app.controller('LogoutController', ['$scope', '$http', '$timeout', '$cookies', '$state', function($scope, $http, $timeout, $cookies, $state) {
			if(!$cookies.get('isLoggedIn')) {
				$state.go('login');
			} else {
				$cookies.remove('isLoggedIn');
				$cookies.remove('email');
				$state.go('login');
				FB.getLoginStatus(function(response) {
					if(response.status === "connected")
						FB.logout();
				});
			}
		}]);

		app.controller('WeatherController', ['$scope', '$http', '$timeout', function ($scope, $http, $timeout) {
			$http.get('http://api.openweathermap.org/data/2.5/forecast?q=toronto&mode=json&appid=44db6a862fba0b067b1930da0d769e98').success(function (response) {
				$scope.weathers = response;
			}).error(function (error) {
				console.log(error);
			});

			$scope.getWeatherUpdate = function () {
				$http.get('http://api.openweathermap.org/data/2.5/forecast?q=' + $scope.cityName + '&mode=json&appid=44db6a862fba0b067b1930da0d769e98').success(function (response) {
					console.log(response.list);
					$scope.weathers = response;
				}).error(function (error) {
					console.log(error);
				});
			}
		}]);

		app.controller('ToDoList', ['$scope', '$http', function ($scope, $http) {
			$http.get('/api/v1/showtodo.php').success(function(response) {
				$scope.todos = response.todos;
			}).error(function (error) {
				console.log (error);
			});

			$scope.createTodo = function () {
				var data = {
					todoitem: $scope.todoitem
				};

				$http({
					url: '/api/v1/newtodo.php',
					method: 'POST',
					data: data,
					headers: {
						'Content-Type': 'application/json; charset=utf-8'
					}
				}).success(function (response) {
					$http.get('/api/v1/showtodo.php').success(function(response) {
						$scope.todos = response.todos;
					}).error(function (error) {
						console.log (error);
					});
					$scope.todoitem = "";
				}).error(function (error) {
					console.log (error);
				});
			}

			$scope.deleteTodo = function (id) {
				var data = { id: id };
				console.log(data);
				$http({
					url: '/api/v1/deletetodo.php',
					method: 'POST',
					data: data,
					headers: {
						'Content-Type': 'application/json; charset=utf-8'
					}
				}).success(function (response) {
					$http.get('/api/v1/showtodo.php').success(function(response) {
						$scope.todos = response.todos;
					}).error(function (error) {
						console.log (error);
					});
				}).error(function (error) {
					console.log(error);
				});
			}
		}]);

		app.controller('ImgurController', ['$scope', '$http', function ($scope, $http) {
			$http.get('https://api.imgur.com/3/gallery/hot/viral/0.json').success(function (response) {
				$scope.imgurs = response.data;
				console.log(response);
			}).error(function (error) {
				console.log (error);
			});
		}]);

		return app;
	});
}).call(this);
